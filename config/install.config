; UUID: #fffbe7f5-1b57-44ba-b85a-163a3637265c

anaconda-navigator: [
    conda: anaconda-navigator ; https://stackoverflow.com/questions/52869648/use-anaconda-navigator-with-minicondas-conda
]

android-studio: [
    Windows: [
        https://dl.google.com/dl/android/studio/install/3.2.1.0/android-studio-ide-181.5056338-windows.exe
    ]
]

aws-cli: [
    [
        Windows: [
            *64bits: https://s3.amazonaws.com/aws-cli/AWSCLI64PY3.msi
            *32bits: https://s3.amazonaws.com/aws-cli/AWSCLI32PY3.msi
        ]
        pip: {install awscli --upgrade --user}
    ]
    doc: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html
]

bluej: [
    Windows: http://www.bluej.org/download/files/BlueJ-windows-414.msi
]

chocolatey: [
    powershell: {iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))}
]

curl: [
    Windows: https://dl.uxnr.de/build/curl/curl_winssl_msys2_mingw64_stc/curl-7.53.1/curl-7.53.1.zip
]

dbeaver: [
    Windows: https://dbeaver.io/files/dbeaver-ce-latest-x86_64-setup.exe
]

deepspeech: [
    pip3: https://github.com/mozilla/DeepSpeech
    git: https://github.com/mozilla/DeepSpeech
    info: https://research.mozilla.org/machine-learning/
]

dockertoolbox: [
    Windows: https://download.docker.com/win/stable/DockerToolbox.exe
    Mac: https://download.docker.com/mac/stable/DockerToolbox.pkg
]

dotnetsdk: [
    Windows: https://download.visualstudio.microsoft.com/download/pr/b43f1987-60d5-4fb1-9e9a-1443fff8472d/ffdb11b6d29038c891810dd9db24f23b/dotnet-sdk-2.2.101-win-gs-x64.exe
]

ele: [
    Browse: https://winaero.com/download.php?view.20
    Tutorials: https://www.intowindows.com/how-to-quickly-launch-elevated-command-prompt-command-prompt-with-admin-rights-from-normal-command-prompt/
]

gatsby-cli: [
    npm: {install --global gatsby-cli}
    post-install: {
        gatsby --version 
        gatsby --help
    }
    info: https://www.gatsbyjs.org/tutorial/part-zero/
    tutorials: [
        https://www.netlify.com/blog/2016/02/24/a-step-by-step-guide-gatsby-on-netlify/#install-gatsby
        https://dev.to/ekaoddlass/building-my-personal-site--part-2-setting-up-gatsby-with-a-starter-site-1ob1
    ]
    pre-requisites: [
        nodejs
        git
    ]
]

git: [
    Windows: [
        https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-64-bit.exe
        home: https://gitforwindows.org/    
    ]
]

gitlab: [
    Ubuntu: [
        sudo: [
            apt: [update upgrade]
            apt-get: [install ca-certificates curl openssh-server postfix]
            apt: [install mailutils]
        ]
        curl: {-LO https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh}
        sudo: [
            bash: {/tmp/script.deb.sh}
            apt-get: [install gitlab-ce]
        ]
        post-install: [
            sudo: {nano /etc/gitlab/gitlab.rb}
        ]
    ]

    tutorials: [
        https://www.netspaceindia.com/how-to-install-gitlab-in-easy-way/
        https://www.techrepublic.com/article/how-to-set-up-a-gitlab-server-and-host-your-own-git-repositories/
        https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-gitlab-on-ubuntu-16-04
        https://www.digitalocean.com/community/tutorials/how-to-set-up-continuous-integration-pipelines-with-gitlab-ci-on-ubuntu-16-04

        https://www.andrewmunsell.com/blog/how-to-install-gitlab-locally-in-a-vm/
        https://www.aaron-powell.com/posts/2012-09-21-a-simple-git-server-on-windows/

        https://blog.sixeyed.com/run-gitlab-on-a-usb-stick-with-docker/
    ]
]

gitlab-ci: [
    Tutorials: [
        https://blog.codecentric.de/en/2018/05/gitlab-ci-pipeline/
    ]
]

gitlab-runner: [
    Windows: https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-windows-386.exe
    post-install: {gitlab-runner.exe register}
    tutorials: [
        https://blog.budhajeewa.com/installing-and-configuring-gitlab/
        https://www.techjunkie.com/host-projects-gitlab/
        https://www.paddingleft.com/2018/03/26/gitlab-ci-runner-install/
        https://www.tutorialspoint.com/gitlab/gitlab_installation.htm
    ]
]

heroku: [
    Windows: [
        *64bits: https://cli-assets.heroku.com/heroku-x64.exe
        *32bits: https://cli-assets.heroku.com/heroku-x86.exe
    ]
    MacOS: [
        https://cli-assets.heroku.com/heroku.pkg
        Homebrew: {install heroku/brew/heroku}
    ]
    Ubuntu: [
        snap: {snap install heroku --classic}
    ]
]

hub: [
    windows: [
        scoop: https://github.com/github/hub
    ]
]

go: [
    https://dl.google.com/go/go1.11.4.windows-amd64.msi
]

graddle: [
    Windows: [
        scoop: {install gradle}
        choco: {install gradle}
        doc: https://gradle.org/install/#prerequisites
    ]
]

hyper: [
    Windows: [
        https://releases.hyper.is/download/win
        home: https://releases.hyper.is/download/win
    ]
]

libreoffice: [
    Windows: https://www.libreoffice.org/donate/dl/win-x86_64/6.1.4/en-US/LibreOffice_6.1.4_Win_x64.msi
]

maven: [
    Windows: http://mirror.ibcp.fr/pub/apache/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.zip
]

miniconda: [
    Windows: https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
]

mps: [
    Windows: https://www.jetbrains.com/mps/download/download-thanks.html?platform=windows
]

neovim: [
    https://github.com/neovim/neovim/releases/download/v0.3.2/nvim-win64.zip
]

nodejs: [
    Windows: https://nodejs.org/dist/v10.14.0/node-v10.14.0-x64.msi
    Post-Install: {node --version}
]

node: nodejs

nservicebus: [
    Windows: https://liveparticularwebstr.blob.core.windows.net/media/tutorials-quickstart.zip
]

openssl: [
    Windows: http://slproweb.com/download/Win64OpenSSL_Light-1_1_1a.exe
]

posh-git: [
    Powershell: {Update-Module PowerShellGet -Force;Install-Module Posh-Git -Scope LocalMachine} 
    Help: {}; https://git-scm.com/book/tr/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Powershell
]

r: [
    Windows: https://cran.r-project.org/bin/windows/base/R-3.5.2-win.exe
    Tutorials: [
        https://www.edureka.co/blog/r-tutorial/
        https://swirlstats.com/students.html
        https://www.statmethods.net/r-tutorial/index.html
    ]
]

redis: [
    Windows: [
        https://github.com/downloads/dmajkic/redis/redis-2.4.5-win32-win64.zip
        Doc: [
            https://redislabs.com/ebook/appendix-a/a-3-installing-on-windows/a-3-2-installing-redis-on-window/
            https://redislabs.com/ebook/appendix-a/a-3-installing-on-windows/a-3-1-drawbacks-of-redis-on-windows/
        ]
        Home: https://redislabs.com
    ]
]

microsoft-r: [
    Windows: https://mran.blob.core.windows.net/install/mro/3.5.1/microsoft-r-open-3.5.1.exe
    Home: https://mran.microsoft.com/documents/what-is-r
] 

msys2: http://www.msys2.org/

newt: [
    Windows: [
        MinGW: {wget -P /tmp http://www.apache.org/dyn/closer.lua/mynewt/apache-mynewt-1.5.0/apache-mynewt-newt-bin-windows-1.5.0.tgz}
        reference: https://mynewt.apache.org/latest/newt/install/newt_windows.html
        requires: msys2
    ]
]

nvm: [
    windows: [
        powershell: {
            # chose desired node version
            $version = "8.12.0"
            # install nvm w/ cmder
            choco install cmder
            choco install nvm
            refreshenv
            # install node
            nvm install $version
            nvm use $version        
        }
    ]
    tutorials: [
        https://medium.com/@Joachim8675309/installing-node-js-with-nvm-4dc469c977d9
    ]
]

reactjs: [
    vscode-extensions: [
        
    ]
    Reference: https://medium.com/productivity-freak/the-ultimate-vscode-setup-for-js-react-6a4f7bd51a2
]
reactnative: [
    requirement: [
        npm: {install -g react-native-cli}
        vscode-extensions: [
            Mandatory: "React Native Tools" 
            Recommended: [Prettier]
        ]
        Recommended: watchman
    ]
    Reference: https://medium.com/@agavatar/react-native-environment-setup-fe4cfa5d38c7
]

rstudio: [
    Windows: https://download1.rstudio.org/RStudio-1.1.463.exe
]

ruby: [
    Windows: https://github.com/oneclick/rubyinstaller2/releases/download/rubyinstaller-2.5.3-1/rubyinstaller-devkit-2.5.3-1-x64.exe
]

scoop: [
    powershell: {iex (new-object net.webclient).downloadstring('https://get.scoop.sh')}
]

scrolldir: [
    npm: {install scrolldir --save}
    yarn: {add scrolldir}
    bower: {install scrolldir --save}
]

sdkman: [
    curl: {-s "https://get.sdkman.io" | bash}
    home: https://sdkman.io/
]

shiny: [
    r: {install.packages("shiny")}
    Tutorials: [
        http://rstudio.github.io/shiny/tutorial/
    ]
]

sphinx4: [
    tutorials: https://cmusphinx.github.io/wiki/tutorialsphinx4/
]

staticsiteboilerplate: https://github.com/ericalli/static-site-boilerplate

tensorflow: [
    pip: {install tensorflow}
]

torchgan: [
    pip3: {install torchgan}
    pip3: {install git+https://github.com/torchgan/torchgan.git}
    git: {clone https://github.com/torchgan/torchgan.git}
    home: https://github.com/torchgan/torchgan
    doc: https://torchgan.readthedocs.io/en/latest/ 
]

treewiz: [
    npm: {install treeviz}
]

typescript: [

]

VcXsrv: [
    Windows: [
        choco: {install -y vcxsrv}
        referer: http://blog.ctaggart.com/2016/05/visual-studio-code-served-from-docker.html
    ]
]

visualstudio: [
    Windows: https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community
    Doc: https://facebook.github.io/watchman/docs/install.html
    Home: https://facebook.github.io/watchman/
]

vscode: [
    Windows: https://aka.ms/win32-x64-user-stable
    Download-Page: https://code.visualstudio.com
]

Watchman: [
    Windows: https://ci.appveyor.com/api/projects/wez/watchman/artifacts/watchman.zip?branch=master&job=Environment:+WATCHMAN_WIN7_COMPAT%3D&pr=false
]

Weinre: [
    npm: {-g install weinre}
    referer: https://www.undefinednull.com/2015/03/17/remote-debugging-localhost-with-weinre/
]

winaero-tweaker: [
    Browse: https://winaero.com/download.php?view.1796
]

wsltty: [
    windows: https://github.com/mintty/wsltty/releases/download/1.9.5/wsltty-1.9.5-install.exe
    info: https://github.com/mintty/wsltty
]
